server.port=8003

# Base packages to scan Dubbo Components (e.g @Service , @Reference)
dubbo.scan.basePackages  = com.supi.mh.service.mybatis.impl

# Dubbo Config properties
## ApplicationConfig Bean
dubbo.application.id = medicohealth-mybatis-service
dubbo.application.name = medicohealth-mybatis-service
dubbo.application.version=1.0.0

## ProtocolConfig Bean
dubbo.protocol.id = dubbo
dubbo.protocol.name = dubbo
dubbo.protocol.port = 12346

## RegistryConfig Bean
dubbo.registry.id = my-registry
dubbo.registry.address = zookeeper://120.78.74.194:2181?backup=120.78.74.194:2182,120.78.74.194:2183

#DATA SOURCE
spring.datasource.url=jdbc:mysql://120.78.74.194:3306/medico_health?characterEncoding=utf8&useSSL=false
spring.datasource.name=ali
spring.datasource.username=${MEDICO_HEALTH_ALI_MYSQL_USERNAME}
spring.datasource.password=${MEDICO_HEALTH_ALI_MYSQL_PASS}
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=1
spring.datasource.minIdle=3
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=30000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

#mybatis
mybatis.mapper-locations=classpath*:mapper/*.xml